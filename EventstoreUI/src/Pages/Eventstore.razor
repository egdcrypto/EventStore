@*@using System.Net.Http.Json
@using Common.Models
@using Common.Models.Enums
@page "/eventstore"

<PageTitle>Eventstore Demo</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Eventstore</MudText>

<MudTable Items="@Events.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Action</MudTh>
        <MudTh>CorrelationId</MudTh>
        <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Element, object>(x=>x.Name)">Status</MudTableSortLabel>
        <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Element, object>(x=>x.Timestamp)">Timestamp</MudTableSortLabel>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Number</MudTd>
        <MudTd DataLabel="Sign">@context.Sign</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position" HideSmall="_hidePosition">@context.Position</MudTd>
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>
    </RowTemplate>
</MudTable>

<MudSwitch @bind-Checked="_hidePosition">Hide <b>position</b> when Breakpoint=Xs</MudSwitch>
<MudSwitch @bind-Checked="_loading">Show Loading</MudSwitch>

@code {
    private bool _hidePosition;
    private bool _loading;
    private IEnumerable<CommandEvent> Events = new List<CommandEvent>();

    protected override async Task OnInitializedAsync()
    {
        Events.Add(
            new CommandEvent()
            {
                Action = "",
                CorrelationId = new Guid(),
                Status = Common.Enums.CommandStatus = Common.Enums.CommandStatus.New,
                Timestamp = DateTimeOffset.UtcNow
            }
        )
    }
}        *@ 